[{"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js":"1","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js":"2","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js":"3","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js":"4","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js":"5","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js":"6","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js":"7","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js":"8","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js":"9","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js":"10","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js":"11","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js":"12","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js":"13","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js":"14","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js":"15","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js":"16","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js":"17","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js":"18","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js":"19","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js":"20","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js":"21","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js":"22","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js":"23","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js":"24"},{"size":346,"mtime":1607545119820,"results":"25","hashOfConfig":"26"},{"size":2800,"mtime":1607646906900,"results":"27","hashOfConfig":"26"},{"size":127,"mtime":1607048726560,"results":"28","hashOfConfig":"26"},{"size":2976,"mtime":1607538212620,"results":"29","hashOfConfig":"26"},{"size":153,"mtime":1607049405560,"results":"30","hashOfConfig":"26"},{"size":156,"mtime":1607049772990,"results":"31","hashOfConfig":"26"},{"size":3757,"mtime":1607538684270,"results":"32","hashOfConfig":"26"},{"size":159,"mtime":1607049761510,"results":"33","hashOfConfig":"26"},{"size":19218,"mtime":1607445003290,"results":"34","hashOfConfig":"26"},{"size":4001,"mtime":1607452190360,"results":"35","hashOfConfig":"26"},{"size":378,"mtime":1607446887890,"results":"36","hashOfConfig":"26"},{"size":1104,"mtime":1607452351210,"results":"37","hashOfConfig":"26"},{"size":732,"mtime":1607640783610,"results":"38","hashOfConfig":"26"},{"size":1521,"mtime":1607642680220,"results":"39","hashOfConfig":"26"},{"size":3160,"mtime":1607642545430,"results":"40","hashOfConfig":"26"},{"size":594,"mtime":1607642656450,"results":"41","hashOfConfig":"26"},{"size":1523,"mtime":1607642631600,"results":"42","hashOfConfig":"26"},{"size":46,"mtime":1607462916677,"results":"43","hashOfConfig":"26"},{"size":180,"mtime":1607532595660,"results":"44","hashOfConfig":"26"},{"size":182,"mtime":1607532579230,"results":"45","hashOfConfig":"26"},{"size":189,"mtime":1607532617240,"results":"46","hashOfConfig":"26"},{"size":1678,"mtime":1607639539440,"results":"47","hashOfConfig":"26"},{"size":973,"mtime":1607646923560,"results":"48","hashOfConfig":"26"},{"size":428,"mtime":1607646956930,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hnf33b",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js",[],["103","104"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js",["105"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js",["106","107","108","109","110","111"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, setUser} from \"../Store/actions\"\n\nconst Login = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherLogin, setResearcherLogin] = useState(false)\n    const [transcriberLogin, setTranscriberLogin] = useState(false)\n    const [podcasterLogin, setPodcasterLogin] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherLogin(false)\n        setTranscriberLogin(false)\n        setPodcasterLogin(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterLogin(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberLogin(true)\n        } else{\n            setResearcherLogin(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n\n    const submitDetails = e =>{\n        const userDetails = setUser(option, email, password)\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Login</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Login","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js",["112","113","114"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, signupUser} from \"../Store/actions\"\n\nconst Signup = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherSignup, setResearcherSignup] = useState(false)\n    const [transcriberSignup, setTranscriberSignup] = useState(false)\n    const [podcasterSignup, setPodcasterSignup] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherSignup(false)\n        setTranscriberSignup(false)\n        setPodcasterSignup(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterSignup(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberSignup(true)\n        } else{\n            setResearcherSignup(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n    const handleFirstName = e => setFirstName(e.target.value)\n    const handleLastName = e => setLastName(e.target.value)\n\n    const submitDetails = e =>{\n        let userDetails\n        if(researcherSignup){\n            userDetails = signupUser(option, email, password)\n        } else {\n            userDetails = signupUser(option, email, password, firstName, lastName)\n        }\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Signup</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n                {podcasterSignup || transcriberSignup ? \n                <>\n                <label>First Name</label>\n                <input type=\"text\" value={firstName} onChange={handleFirstName}></input>\n                <label>Last Name</label>\n                <input type=\"text\" value={lastName} onChange={handleLastName}></input>\n                </> : null\n            }\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Signup","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js",["115","116"],"import React, { useEffect, useState } from \"react\"\nimport SpeakerSection from \"./SpeakerSection/SpeakerSection\"\nimport Text from \"./Text/Text\"\n\n\nconst parseJsonAndSetStates = (wordArr) =>{\n    let speakerList = [wordArr[0].speaker]\n    let currentSpeaker = wordArr[0].speaker\n    let result = []\n    let collector = []\n    for(let i = 0; i < wordArr.length; i++){\n        if(wordArr[i].speaker !== currentSpeaker){\n            currentSpeaker = wordArr[i].speaker;\n            result.push(collector)\n            collector = []\n            if(!speakerList.includes(wordArr[i].speaker)){\n                speakerList.push(wordArr[i].speaker)\n            }\n        }\n        collector.push(wordArr[i])\n    }\n    result.push(collector)\n    console.log(result)\n    return {speakerNames: speakerList, sections: result}\n}\n\nconst Editor = (props) =>{\n    const [editorMode, setEditorMode] = useState(0)\n    const [stateSections, setStateSections] = useState([])\n    const [wordNodes, setWordNodes] = useState([])\n    const [selectedWordIndex, setSelectedWordIndex] = useState(0)\n\n    //const [speakers, setSpeakers] = useState(speakerNames)\n\n    useEffect(()=>{\n        let data = JSON.parse(props.data)\n        console.log(\"I am setting data again\")\n        data = [...data, ...data, ...data, ...data]\n        const temp = parseJsonAndSetStates(data)\n        let speakerNames = temp.speakerNames\n        let sections = temp.sections\n        //setSpeakers(speakerNames)\n        setStateSections(sections)\n    }, [])\n    \n    useEffect(()=>{\n        console.log(\"Resetting this jabroni\")\n        if(!stateSections){\n            return\n        }\n        let result = []\n        let currentIndex = 0\n        const words = document.querySelectorAll(\".Editor__Word\")\n        words.forEach(el=>{\n            //el.createAttribute(\"totalwordindex\")\n            el.setAttribute(\"totalwordindex\", currentIndex++)\n            result.push(el)\n        })\n        setWordNodes(result)\n\n    }, [stateSections])\n\n\n    //functions to thread\n\n\n    const setSpeakerNames = (oldName, newName) =>{\n        //this needs to alter the larger guy up in wrapper!!\n        //const innerSpeakers = [...speakers];\n        //const i = innerSpeakers.indexOf(oldName)\n        //innerSpeakers[i] = newName\n        //console.log(innerSpeakers)\n        //setSpeakers(innerSpeakers)\n        const newStateSections = []\n        for(let i = 0; i < stateSections.length; i++){\n            if(stateSections[i][0].speaker !== oldName){\n                newStateSections.push(stateSections[i])\n                continue\n            }\n            const collector = []\n            for(let j = 0; j < stateSections[i].length; j++){\n                const word = stateSections[i][j]\n                word.speaker = newName\n                collector.push(word)\n            }\n            newStateSections.push(collector)\n        }\n        setStateSections(newStateSections)\n    }\n\n    const handleWordClick = (e) =>{\n        if(editorMode === 2){\n            return\n        }\n        const newIndex = e.target.getAttribute(\"totalwordindex\")\n        if(selectedWordIndex === newIndex){\n            setEditorMode(2)\n            return\n        }\n        wordNodes[selectedWordIndex].classList.remove(\"Editor__SelectedWord\")\n        setSelectedWordIndex(newIndex)\n        wordNodes[newIndex].classList.add(\"Editor__SelectedWord\")\n    }\n    \n\n    if(!stateSections){\n        console.log(\"Nothing here\")\n        return null\n    }\n    console.log(\"SOMETHING HERE\")\n    return(\n        <div>\n        <h1>Editor</h1>\n        {stateSections.map((words, i) => {\n            return(\n                <div className=\"section\">\n                <SpeakerSection key={i*2} speaker={words[0].speaker} stateUpdater={setSpeakerNames} />\n                <Text setEditorMode={setEditorMode} editorMode={editorMode} handleWordClick={handleWordClick} text={words} specialKey={i} key={i*2+1} />\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n\nexport default Editor","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js",["117"],"import React from \"react\";\n\nconst SpeakerSection = (props) =>{\n    const speakerName = props.speaker\n    const stateUpdater = props.stateUpdater\n\n    const changeSpeakerName = (name) =>{\n        stateUpdater(speakerName, name)\n    }\n\n    return(\n        <div className=\"speakerSecontion\">\n            <h3>{speakerName}:</h3>\n        </div>\n    )\n}\n\nexport default SpeakerSection","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js",["118"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js",["119"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js",["120"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js",["121"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":42,"column":5,"nodeType":"128","endLine":42,"endColumn":7,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":14,"column":12,"nodeType":"132","messageId":"133","endLine":14,"endColumn":27},{"ruleId":"130","severity":1,"message":"134","line":15,"column":12,"nodeType":"132","messageId":"133","endLine":15,"endColumn":28},{"ruleId":"130","severity":1,"message":"135","line":16,"column":12,"nodeType":"132","messageId":"133","endLine":16,"endColumn":26},{"ruleId":"130","severity":1,"message":"136","line":20,"column":12,"nodeType":"132","messageId":"133","endLine":20,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":31,"column":8,"nodeType":"128","endLine":31,"endColumn":14,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"127","line":41,"column":8,"nodeType":"128","endLine":41,"endColumn":10,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"136","line":22,"column":12,"nodeType":"132","messageId":"133","endLine":22,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":33,"column":8,"nodeType":"128","endLine":33,"endColumn":14,"suggestions":"140"},{"ruleId":"126","severity":1,"message":"127","line":43,"column":8,"nodeType":"128","endLine":43,"endColumn":10,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":40,"column":13,"nodeType":"132","messageId":"133","endLine":40,"endColumn":25},{"ruleId":"126","severity":1,"message":"143","line":44,"column":8,"nodeType":"128","endLine":44,"endColumn":10,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"145","line":7,"column":11,"nodeType":"132","messageId":"133","endLine":7,"endColumn":28},{"ruleId":"126","severity":1,"message":"146","line":17,"column":8,"nodeType":"128","endLine":17,"endColumn":10,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":21},{"ruleId":"130","severity":1,"message":"149","line":1,"column":22,"nodeType":"132","messageId":"133","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":19,"column":7,"nodeType":"128","endLine":19,"endColumn":9,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-unused-vars","'researcherLogin' is assigned a value but never used.","Identifier","unusedVar","'transcriberLogin' is assigned a value but never used.","'podcasterLogin' is assigned a value but never used.","'stateError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ifLoggedInThenRedirect'. Either include it or remove the dependency array.",["154"],["155"],["156"],["157"],"'speakerNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["158"],"'changeSpeakerName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["159"],"'useDispatch' is defined but never used.","'applyMiddleware' is defined but never used.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"161","fix":"165"},{"desc":"163","fix":"166"},{"desc":"161","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"161","fix":"172"},"Update the dependencies array to be: [dispatch]",{"range":"173","text":"174"},"Update the dependencies array to be: [ifLoggedInThenRedirect, user]",{"range":"175","text":"176"},{"range":"177","text":"174"},{"range":"178","text":"176"},{"range":"179","text":"174"},"Update the dependencies array to be: [props.data]",{"range":"180","text":"181"},"Update the dependencies array to be: [dispatch, id]",{"range":"182","text":"183"},{"range":"184","text":"174"},[1526,1528],"[dispatch]",[1054,1060],"[ifLoggedInThenRedirect, user]",[1222,1224],[1164,1170],[1332,1334],[1502,1504],"[props.data]",[615,617],"[dispatch, id]",[659,661]]
[{"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js":"1","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js":"2","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js":"3","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js":"4","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js":"5","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js":"6","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js":"7","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js":"8","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js":"9","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js":"10","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js":"11","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js":"12","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js":"13","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js":"14","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js":"15","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js":"16","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js":"17","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js":"18","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js":"19","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js":"20","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js":"21","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js":"22","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js":"23","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js":"24","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/TranscriptDisplay/TranscriptDisplay.js":"25","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayerWrapper.js":"26","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayer.js":"27","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Controls.js":"28","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/useAudioPlayer.js":"29","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Volume.js":"30","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Bar.js":"31","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Length.js":"32","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/ContextBoxSpeaker.js":"33"},{"size":346,"mtime":1607545119820,"results":"34","hashOfConfig":"35"},{"size":2798,"mtime":1607917885150,"results":"36","hashOfConfig":"35"},{"size":405,"mtime":1607921574410,"results":"37","hashOfConfig":"35"},{"size":2976,"mtime":1607538212620,"results":"38","hashOfConfig":"35"},{"size":153,"mtime":1607049405560,"results":"39","hashOfConfig":"35"},{"size":156,"mtime":1607049772990,"results":"40","hashOfConfig":"35"},{"size":3757,"mtime":1607538684270,"results":"41","hashOfConfig":"35"},{"size":282,"mtime":1607722197336,"results":"42","hashOfConfig":"35"},{"size":940,"mtime":1607825063260,"results":"43","hashOfConfig":"35"},{"size":12255,"mtime":1607915292240,"results":"44","hashOfConfig":"35"},{"size":3438,"mtime":1607839387980,"results":"45","hashOfConfig":"35"},{"size":4126,"mtime":1607910203100,"results":"46","hashOfConfig":"35"},{"size":732,"mtime":1607755022590,"results":"47","hashOfConfig":"35"},{"size":1547,"mtime":1607843465080,"results":"48","hashOfConfig":"35"},{"size":5509,"mtime":1607907543630,"results":"49","hashOfConfig":"35"},{"size":881,"mtime":1607803848890,"results":"50","hashOfConfig":"35"},{"size":2957,"mtime":1607803827900,"results":"51","hashOfConfig":"35"},{"size":46,"mtime":1607462916677,"results":"52","hashOfConfig":"35"},{"size":1200,"mtime":1607918742580,"results":"53","hashOfConfig":"35"},{"size":1206,"mtime":1607918756870,"results":"54","hashOfConfig":"35"},{"size":2299,"mtime":1607919688560,"results":"55","hashOfConfig":"35"},{"size":1718,"mtime":1607656782210,"results":"56","hashOfConfig":"35"},{"size":1720,"mtime":1607843348750,"results":"57","hashOfConfig":"35"},{"size":428,"mtime":1607646956930,"results":"58","hashOfConfig":"35"},{"size":1356,"mtime":1607722961920,"results":"59","hashOfConfig":"35"},{"size":659,"mtime":1607825230980,"results":"60","hashOfConfig":"35"},{"size":876,"mtime":1607825145030,"results":"61","hashOfConfig":"35"},{"size":1370,"mtime":1607827697510,"results":"62","hashOfConfig":"35"},{"size":3674,"mtime":1607827613910,"results":"63","hashOfConfig":"35"},{"size":734,"mtime":1607727232300,"results":"64","hashOfConfig":"35"},{"size":1639,"mtime":1607729598050,"results":"65","hashOfConfig":"35"},{"size":600,"mtime":1607727235330,"results":"66","hashOfConfig":"35"},{"size":1396,"mtime":1607798758910,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"hnf33b",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js",[],["148","149"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js",["150"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js",["151","152","153","154","155","156"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, setUser} from \"../Store/actions\"\n\nconst Login = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherLogin, setResearcherLogin] = useState(false)\n    const [transcriberLogin, setTranscriberLogin] = useState(false)\n    const [podcasterLogin, setPodcasterLogin] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherLogin(false)\n        setTranscriberLogin(false)\n        setPodcasterLogin(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterLogin(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberLogin(true)\n        } else{\n            setResearcherLogin(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n\n    const submitDetails = e =>{\n        const userDetails = setUser(option, email, password)\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Login</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Login","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js",["157","158","159"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, signupUser} from \"../Store/actions\"\n\nconst Signup = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherSignup, setResearcherSignup] = useState(false)\n    const [transcriberSignup, setTranscriberSignup] = useState(false)\n    const [podcasterSignup, setPodcasterSignup] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherSignup(false)\n        setTranscriberSignup(false)\n        setPodcasterSignup(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterSignup(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberSignup(true)\n        } else{\n            setResearcherSignup(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n    const handleFirstName = e => setFirstName(e.target.value)\n    const handleLastName = e => setLastName(e.target.value)\n\n    const submitDetails = e =>{\n        let userDetails\n        if(researcherSignup){\n            userDetails = signupUser(option, email, password)\n        } else {\n            userDetails = signupUser(option, email, password, firstName, lastName)\n        }\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Signup</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n                {podcasterSignup || transcriberSignup ? \n                <>\n                <label>First Name</label>\n                <input type=\"text\" value={firstName} onChange={handleFirstName}></input>\n                <label>Last Name</label>\n                <input type=\"text\" value={lastName} onChange={handleLastName}></input>\n                </> : null\n            }\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Signup","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js",["160"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Editor from \"./Editor\"\nimport {getEditorData, clearEditorData} from \"../Store/actions\"\nimport { useParams } from \"react-router\"\n\nconst EditorWrapper = (props) =>{\n    const dispatch = useDispatch()\n    const {transcriptId} = useParams()\n    const editorData = useSelector(state=>state.editorData)\n\n    const [stateEditorData, setStateEditorData] = useState(editorData)\n\n    useEffect(()=>{\n        const prom = getEditorData(transcriptId)\n        prom.then(val=>{dispatch(val)})\n        return()=>{dispatch(clearEditorData())}\n    },[])\n\n    useEffect(()=>{\n        setStateEditorData(editorData)\n    }, [editorData])\n\n    if(!stateEditorData.data){\n        return <p>Loading</p>\n    } \n    return(\n        <Editor data={stateEditorData} speakerOptions={editorData.transcript.Speakers} />\n    )\n}\n\n\nexport default EditorWrapper","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js",["161","162","163","164","165","166","167"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js",["168","169","170"],"import React, { useEffect, useState } from \"react\";\nimport ListDividers from \"./ContextBoxSpeaker\"\n\nconst SpeakerSection = (props) =>{\n    const speakerName = props.speaker\n    const stateUpdater = props.stateUpdater\n    const number = props.number\n    const sections = props.sections\n    const changeSectionSpeaker = props.changeSectionSpeaker\n\n    const changeSectionNameFunction = (name) =>{\n        changeSectionSpeaker(number, name, sections)\n    } \n\n    const createSectionNameSwitcherFunction = (name, sections)=>{\n        return(e) =>{\n            changeSectionNameFunction(name)\n        }\n    }\n    \n\n    const changeSpeakerName = (name) =>{\n        stateUpdater(speakerName, name, sections)\n    }\n\n    const createNameSwitcherFunction = (name, sections) =>{\n        return (e)=>{\n            changeSpeakerName(name, sections)\n        }\n    }\n\n    //set up the event listeners to open and close menus\n    useEffect(()=>{\n        const handleClick = (e) =>{\n            e.stopPropagation()\n            document.querySelector(\"html\").addEventListener(\"click\", handleClickOut)\n            const div = document.createElement(\"div\")\n            document.querySelector(\"body\").appendChild(div)\n            div.classList.add(\"speakerClickContextBox\")\n            div.style.top = e.clientY + \"px\";\n            div.style.left = e.clientX + \"px\";\n            div.backgroundColor = \"grey\"\n            \n            for(let i = 0; i < props.speakerList.length; i++){\n                const option = document.createElement(\"div\")\n                option.innerHTML = `${speakerName} => ${props.speakerList[i].name}`\n                option.style.display = \"flex\"\n                option.classList.add(\"speakerOption\")\n                div.appendChild(option)\n                option.addEventListener(\"click\", createNameSwitcherFunction(props.speakerList[i].name, sections))\n            }\n            for(let i = 0; i < props.speakerList.length; i++){\n                const option = document.createElement(\"div\")\n                option.innerHTML = `This Section => ${props.speakerList[i].name}`\n                option.style.display = \"flex\"\n                option.classList.add(\"speakerOption\")\n                div.appendChild(option)\n                option.addEventListener(\"click\", createSectionNameSwitcherFunction(props.speakerList[i].name, sections))\n            }\n\n            \n\n            e.target.addEventListener(\"click\", handleClickOut)\n        }\n        const handleClickOut = (e) =>{\n            console.log(\"close menu\")\n            document.querySelector(\"html\").removeEventListener(\"click\", handleClickOut)\n            const sections = document.querySelectorAll(\".speakerSecontion\")\n            sections.forEach(el=>el.removeEventListener(\"click\", handleClickOut))\n            const boxes = document.querySelectorAll(\".speakerClickContextBox\")\n            boxes.forEach(el=> document.querySelector(\"body\").removeChild(el))\n        }\n        document.getElementById(`speakerSection${number}`).addEventListener(\"click\", handleClick)\n\n        const removeEventListeners = () =>{\n            document.getElementById(`speakerSection${number}`).removeEventListener(\"click\", handleClick)\n        }\n        //return removeEventListeners\n    })\n\n    return(\n        <>\n        <div className=\"speakerSecontion\" id={`speakerSection${number}`}>\n            <h3>{speakerName}:</h3>\n        </div>\n        </>\n    )\n}\n\nexport default SpeakerSection","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js",["171"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js",["172"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PodcastDisplay from \"./PodCastDisplay\"\nimport {getPodcast, clearPodcast} from \"../../Store/actions\"\nimport { useParams } from \"react-router\"\n\nconst PodcastDisplayWrapper = (props) =>{\n    const {id} = useParams()\n    const dispatch = useDispatch()\n    const podcastInfo = useSelector(state=>state.podcastDisplay)\n\n    useEffect(()=>{\n        const asyncFunc = async() => await getPodcast(id)\n        asyncFunc().then(val=>dispatch(val))\n        return ()=>{\n            dispatch(clearPodcast())\n        }\n    }, [])\n\n    return(\n        \n        <PodcastDisplay info={podcastInfo} />\n    )\n}\n\nexport default PodcastDisplayWrapper","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js",["173"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js",["174"],"import {createStore, applyMiddleware, combineReducers, compose} from \"redux\"\n\nimport {podcastDisplayReducer, errorReducer, userReducer, myPodcastsReducer, mediaUrlReducer, transcriptsReducer, editorReducer, updateWordArrReducer,\n    updateAudioIsLoadedReducer, sectionsReducer} from \"./reducers\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({podcastDisplay: podcastDisplayReducer, user: userReducer, error: errorReducer, myPodcasts: myPodcastsReducer, mediaUrl: mediaUrlReducer,\n    transcripts: transcriptsReducer, editorData: editorReducer, updateWordArr: updateWordArrReducer, updateAudioIsLoaded: updateAudioIsLoadedReducer,\n    sections: sectionsReducer})\n\nconst configureStore = initialState =>{\n    return createStore(reducer, initialState, composeEnhancers())\n}\n\nexport const store = configureStore({})\n","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js",[],["175","176"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js",["177"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport {setMyPodcasts, clearMyPodcasts, setNewPodcast} from \"../../Store/actions\"\n\n\nconst MyPodcasts = (props) =>{\n    const history = useHistory()\n    const myPodcasts = useSelector(state=>state.myPodcasts)\n    const dispatch = useDispatch()\n\n    const [myPodcastsState, setMyPodcastsState] = useState(myPodcasts || [])\n    const [newRSSFeed, setNewRSSFeed] = useState(\"\")\n\n    useEffect(()=>{\n        const pods = setMyPodcasts()\n        pods.then(val=> dispatch(val))\n        return ()=>{\n            dispatch(clearMyPodcasts())\n        }\n    },[])\n\n    useEffect(()=>{\n        setMyPodcastsState(myPodcasts)\n    },[myPodcasts])\n\n    const handleRSSFeedChange = (e) => setNewRSSFeed(e.target.value)\n\n    const addFeed = e =>{\n        setNewRSSFeed(\"\")\n        const prom = setNewPodcast(newRSSFeed)\n        prom.then(val => dispatch(val))\n    }\n\n    const generateLinkFunction = (id) =>{\n        return () =>{\n            history.push(\"/podcaster/podcasts/\" + id)\n        }\n    }\n\n    return(\n        <>\n        <div className=\"myPodcasts\">\n            {myPodcastsState.map((el, i) =>{\n                return(\n                    <div onClick={generateLinkFunction(el.id)} className=\"podcast\" key={i}>\n                        <h3>{el.name}</h3>\n                    </div>\n                )\n            })}\n        </div>\n        <br/>\n        <br/>\n        <label>Add New RSS Feed:</label>\n        <input value={newRSSFeed} onChange={handleRSSFeedChange}></input>\n        <button onClick={addFeed}>Add Feed</button>\n\n\n        </>\n    )\n}\n\nexport default MyPodcasts","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js",["178"],"import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SpeakerBox from \"./SpeakerBox\"\nimport {createNewTranscriptJob} from \"../../Store/actions\"\nimport { useHistory, useParams } from \"react-router\";\nimport {clearMediaUrl} from \"../../Store/actions\"\n\nconst NewTranscriptForm = (props) =>{\n    const {id, title} = useParams()\n    const dispatch = useDispatch()\n    const mediaUrl = useSelector(state=>state.mediaUrl)\n    const history = useHistory()\n    const [speakerSections, setSpeakerSections] = useState([\"item\"])\n    const [loading, setLoading] = useState(false)\n\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearMediaUrl())\n        }\n    },[])\n    \n    const addSpeaker = () =>{\n        const temp = [...speakerSections]\n        temp.push(\"item\")\n        setSpeakerSections(temp)\n    }\n\n    const submit = () =>{\n        setLoading(true)\n        const getAllBoxes = document.querySelectorAll(\".speakerInputBox\")\n        const speakers = []\n        getAllBoxes.forEach((el)=>{\n            speakers.push(el.value)\n        })\n        const prom = createNewTranscriptJob(mediaUrl, id, speakers, title)\n        prom.then(val=> {\n            dispatch(val);\n            history.goBack()\n        })\n    }\n\n\n\n    return(\n        <div className=\"speakerNameForm\">\n            {speakerSections.map((el, i)=>{\n                return(\n                    <SpeakerBox index={i} />\n                )\n            })}\n            <br/>\n            <button onClick={addSpeaker}>Add Speaker</button>\n            {loading ? <button>Pending</button> : <button onClick={submit}>Submit</button>}\n        </div>\n        \n    )\n}\n\nexport default NewTranscriptForm","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/TranscriptDisplay/TranscriptDisplay.js",["179"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {getTranscripts, clearTranscripts} from \"../../../Store/actions\"\n\nconst TranscriptDisplay = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    const transcripts = useSelector(state=>state.transcripts)\n\n    const [stateTranscripts, setStateTranscripts] = useState(transcripts)\n\n    useEffect(()=>{\n        const prom = getTranscripts()\n        prom.then(val=>dispatch(val))\n\n        return ()=>dispatch(clearTranscripts())\n    },[])\n\n    useEffect(()=>{\n        setStateTranscripts(transcripts)\n    }, [transcripts])\n\n    const createClickFunction = (id) => {\n        return ()=>{\n            history.push(\"/transcriber/transcribe/\" + id)\n        }\n    }\n\n    if(!stateTranscripts.length){\n        return <p>Loading</p>\n    }else{\n        return(\n            <div className=\"TranscriptPage\">\n                {stateTranscripts.map((el, i)=>{\n                    return(<div className=\"neededTranscript\" key={i} onClick={createClickFunction(el.id)}>\n                        <h4>{el.title}</h4>\n                        <p>From: {el.podcastName}</p>\n                    </div>)\n                })}\n            </div>\n        )\n    }\n}\n\nexport default TranscriptDisplay","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayerWrapper.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayer.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Controls.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/useAudioPlayer.js",["180","181"],"import {useState, useEffect} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {updateAudioIsLoaded} from \"../../Store/actions\"\n\nconst useAudioPlayer = (podcast, keepWithTime, editorMode, setEditorMode) =>{\n    const dispatch = useDispatch()\n    //const [length, setLegth] = useState(podcast.length);\n    const [length, setLegth] = useState(0);\n    const [currentTime, setCurrentTime] = useState();\n    const [playing, setPlaying] = useState(false);\n    const [clickedTime, setClickedTime] = useState(0);\n\n    const makeSetAudioVolume = (audio) => (num) =>{\n        audio.volume = num/100\n    }\n\n\n    useEffect(()=>{\n        const audio = document.getElementById(\"audio\");\n        if(!audio){\n            return\n        }\n        //dispatch(updateAudioIsLoaded(true))\n\n        const setAudioData = () =>{\n            setLegth(audio.duration);\n            setCurrentTime(audio.currentTime);\n        }\n\n        const setAudioTime = () => {\n            setCurrentTime(audio.currentTime);\n            //\n        }\n\n        const spaceToPause = (e) =>{\n            if(e.key === \" \" && editorMode === 0){\n                setPlaying(!playing)\n            }\n        }\n\n        const enterToChangeEditorMode = (e) => {\n            if(e.key === \"Enter\"){\n                if(editorMode === 0){\n                    setPlaying(false)\n                    setEditorMode(2)\n                } else{\n                    setPlaying(true)\n                    setEditorMode(0)\n                }\n            }\n        }\n\n        audio.addEventListener(\"loadeddata\", setAudioData);\n        audio.addEventListener(\"timeupdate\", keepWithTime);\n        audio.addEventListener(\"timeupdate\", setAudioTime);\n        document.querySelector(\"body\").addEventListener(\"keypress\", spaceToPause)\n        document.querySelector(\"body\").addEventListener(\"keypress\", enterToChangeEditorMode)\n\n        if(playing){\n            audio.play();\n        } else{\n            audio.pause()\n        };\n\n        if (clickedTime && clickedTime !== currentTime) {\n            audio.currentTime = clickedTime;\n            setClickedTime(null);\n          } \n\n        return ()=>{\n            audio.removeEventListener(\"loadeddata\", setAudioData);\n            audio.removeEventListener(\"timeupdate\", setAudioTime);\n            audio.removeEventListener(\"timeupdate\", keepWithTime)\n            document.querySelector(\"body\").removeEventListener(\"keypress\", spaceToPause)\n            document.querySelector(\"body\").removeEventListener(\"keypress\", enterToChangeEditorMode)\n        }\n    });\n\n    useEffect(()=>{\n        const audio = document.getElementById(\"audio\");\n        if(!audio){\n            return\n        }\n        dispatch(updateAudioIsLoaded(true))\n\n        const setAudioData = () =>{\n            setLegth(audio.duration);\n            setCurrentTime(0);\n        }\n        audio.currentTime = 0;\n        const setAudioTime = () => setCurrentTime(audio.currentTime);\n\n        audio.addEventListener(\"loadeddata\", setAudioData);\n        audio.addEventListener(\"timeupdate\", setAudioTime);\n\n\n        if(playing){\n            audio.play();\n        } else{\n            audio.pause()\n        };\n\n        if (clickedTime && clickedTime !== currentTime) {\n            audio.currentTime = clickedTime;\n            setClickedTime(null);\n          } \n\n        return ()=>{\n            audio.removeEventListener(\"loadeddata\", setAudioData);\n            audio.removeEventListener(\"timeupdate\", setAudioTime);\n        }\n    }, [podcast]);\n\n\n    return{\n        currentTime,\n        length,\n        playing,\n        setPlaying,\n        setClickedTime,\n        makeSetAudioVolume,\n    }\n}\n\nexport default useAudioPlayer;","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Volume.js",["182"],"import React, { useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nconst Volume = (props) =>{\n    const [value, setValue] = React.useState(50);\n    \n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    useEffect(()=>{\n        props.makeSetAudioVolume(document.getElementById(\"audio\"))(value)\n    },[value])\n    \n    return (\n        <div className=\"AudioPlayer__VolumeDiv\">\n            <VolumeDown />\n            <Slider value={value} onChange={handleChange} aria-labelledby=\"Volume slider\" />\n            <VolumeUp />\n        </div>\n        )\n}\n\nexport default Volume;","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Bar.js",["183"],"import React from \"react\";\nimport Length from \"./Length\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\n\nconst Bar = (props) =>{\n    const setClickedTime = (e) =>{\n        const bar = document.querySelector(\".AudioPlayer__TimeSlider\").getBoundingClientRect();\n        const percent = ((e.pageX - bar.left) / bar.width);\n        \n        props.setClickedTime(Math.floor(props.length * percent))\n    }\n\n\n    const PrettoSlider = withStyles({\n        root: {\n          color: '#1cb3ff',\n          height: 8,\n        },\n        thumb: {\n          height: 17,\n          width: 17,\n          backgroundColor: '#1cb3ff',\n          border: '2px solid currentColor',\n          marginTop: -4,\n          marginLeft: -12,\n          '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n          },\n        },\n        active: {},\n        valueLabel: {\n          left: 'calc(-50% + 4px)',\n        },\n        track: {\n          height: 8,\n          borderRadius: 4,\n        },\n        rail: {\n          height: 8,\n          borderRadius: 4,\n        },\n      })(Slider);\n    return (\n        <div className=\"AudioPlayer__Section AudioPlayer__LengthAndBar\">\n            <div className=\"AudioPlayer__LengthContainer\">\n                <Length length={props.length} currentTime={props.currentTime} />\n            </div>\n            <div onClick={setClickedTime} className=\"AudioPlayer__BarContainer\">\n                <PrettoSlider className={\"AudioPlayer__TimeSlider\"}  value={(props.currentTime/props.length) *100} />\n            </div>\n    </div>\n    )\n}\n\nexport default Bar;","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Length.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/ContextBoxSpeaker.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":41,"column":5,"nodeType":"190","endLine":41,"endColumn":7,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":14,"column":12,"nodeType":"194","messageId":"195","endLine":14,"endColumn":27},{"ruleId":"192","severity":1,"message":"196","line":15,"column":12,"nodeType":"194","messageId":"195","endLine":15,"endColumn":28},{"ruleId":"192","severity":1,"message":"197","line":16,"column":12,"nodeType":"194","messageId":"195","endLine":16,"endColumn":26},{"ruleId":"192","severity":1,"message":"198","line":20,"column":12,"nodeType":"194","messageId":"195","endLine":20,"endColumn":22},{"ruleId":"188","severity":1,"message":"199","line":31,"column":8,"nodeType":"190","endLine":31,"endColumn":14,"suggestions":"200"},{"ruleId":"188","severity":1,"message":"189","line":41,"column":8,"nodeType":"190","endLine":41,"endColumn":10,"suggestions":"201"},{"ruleId":"192","severity":1,"message":"198","line":22,"column":12,"nodeType":"194","messageId":"195","endLine":22,"endColumn":22},{"ruleId":"188","severity":1,"message":"199","line":33,"column":8,"nodeType":"190","endLine":33,"endColumn":14,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"189","line":43,"column":8,"nodeType":"190","endLine":43,"endColumn":10,"suggestions":"203"},{"ruleId":"188","severity":1,"message":"204","line":18,"column":7,"nodeType":"190","endLine":18,"endColumn":9,"suggestions":"205"},{"ruleId":"192","severity":1,"message":"206","line":6,"column":9,"nodeType":"194","messageId":"195","endLine":6,"endColumn":28},{"ruleId":"192","severity":1,"message":"207","line":8,"column":10,"nodeType":"194","messageId":"195","endLine":8,"endColumn":24},{"ruleId":"192","severity":1,"message":"208","line":12,"column":11,"nodeType":"194","messageId":"195","endLine":12,"endColumn":19},{"ruleId":"192","severity":1,"message":"209","line":18,"column":11,"nodeType":"194","messageId":"195","endLine":18,"endColumn":35},{"ruleId":"192","severity":1,"message":"210","line":24,"column":12,"nodeType":"194","messageId":"195","endLine":24,"endColumn":29},{"ruleId":"192","severity":1,"message":"211","line":24,"column":31,"nodeType":"194","messageId":"195","endLine":24,"endColumn":51},{"ruleId":"188","severity":1,"message":"212","line":48,"column":8,"nodeType":"190","endLine":48,"endColumn":10,"suggestions":"213"},{"ruleId":"192","severity":1,"message":"214","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"215","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":20},{"ruleId":"192","severity":1,"message":"216","line":75,"column":15,"nodeType":"194","messageId":"195","endLine":75,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":95,"column":8,"nodeType":"190","endLine":95,"endColumn":10,"suggestions":"217"},{"ruleId":"188","severity":1,"message":"218","line":18,"column":8,"nodeType":"190","endLine":18,"endColumn":10,"suggestions":"219"},{"ruleId":"192","severity":1,"message":"220","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":21},{"ruleId":"192","severity":1,"message":"221","line":1,"column":22,"nodeType":"194","messageId":"195","endLine":1,"endColumn":37},{"ruleId":"184","replacedBy":"222"},{"ruleId":"186","replacedBy":"223"},{"ruleId":"188","severity":1,"message":"189","line":21,"column":7,"nodeType":"190","endLine":21,"endColumn":9,"suggestions":"224"},{"ruleId":"188","severity":1,"message":"189","line":21,"column":7,"nodeType":"190","endLine":21,"endColumn":9,"suggestions":"225"},{"ruleId":"188","severity":1,"message":"189","line":19,"column":7,"nodeType":"190","endLine":19,"endColumn":9,"suggestions":"226"},{"ruleId":"188","severity":1,"message":"227","line":18,"column":5,"nodeType":"194","endLine":18,"endColumn":14,"suggestions":"228"},{"ruleId":"188","severity":1,"message":"229","line":112,"column":8,"nodeType":"190","endLine":112,"endColumn":17,"suggestions":"230"},{"ruleId":"188","severity":1,"message":"231","line":14,"column":7,"nodeType":"190","endLine":14,"endColumn":14,"suggestions":"232"},{"ruleId":"192","severity":1,"message":"233","line":3,"column":22,"nodeType":"194","messageId":"195","endLine":3,"endColumn":32},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["236"],"no-unused-vars","'researcherLogin' is assigned a value but never used.","Identifier","unusedVar","'transcriberLogin' is assigned a value but never used.","'podcasterLogin' is assigned a value but never used.","'stateError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ifLoggedInThenRedirect'. Either include it or remove the dependency array.",["237"],["238"],["239"],["240"],"React Hook useEffect has missing dependencies: 'dispatch' and 'transcriptId'. Either include them or remove the dependency array.",["241"],"'updateAudioIsLoaded' is defined but never used.","'TextsmsTwoTone' is defined but never used.","'dispatch' is assigned a value but never used.","'updateAudioIsLoadedSLice' is assigned a value but never used.","'openLocalTextMenu' is assigned a value but never used.","'setOpenLocalTextMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'words'. Either include it or remove the dependency array.",["242"],"'useState' is defined but never used.","'ListDividers' is defined but never used.","'removeEventListeners' is assigned a value but never used.",["243"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["244"],"'useDispatch' is defined but never used.","'applyMiddleware' is defined but never used.",["234"],["235"],["245"],["246"],["247"],"React Hook useEffect contains a call to 'setClickedTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [keepWithTime, playing, clickedTime, currentTime, editorMode, setEditorMode] as a second argument to the useEffect Hook.",["248"],"React Hook useEffect has missing dependencies: 'clickedTime', 'currentTime', 'dispatch', and 'playing'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["250"],"'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"251","fix":"255"},{"desc":"253","fix":"256"},{"desc":"251","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"251","fix":"262"},{"desc":"263","fix":"264"},{"desc":"251","fix":"265"},{"desc":"251","fix":"266"},{"desc":"251","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [dispatch]",{"range":"274","text":"275"},"Update the dependencies array to be: [ifLoggedInThenRedirect, user]",{"range":"276","text":"277"},{"range":"278","text":"275"},{"range":"279","text":"277"},{"range":"280","text":"275"},"Update the dependencies array to be: [dispatch, transcriptId]",{"range":"281","text":"282"},"Update the dependencies array to be: [words]",{"range":"283","text":"284"},{"range":"285","text":"275"},"Update the dependencies array to be: [dispatch, id]",{"range":"286","text":"287"},{"range":"288","text":"275"},{"range":"289","text":"275"},{"range":"290","text":"275"},"Add dependencies array: [keepWithTime, playing, clickedTime, currentTime, editorMode, setEditorMode]",{"range":"291","text":"292"},"Update the dependencies array to be: [clickedTime, currentTime, dispatch, playing, podcast]",{"range":"293","text":"294"},"Update the dependencies array to be: [props, value]",{"range":"295","text":"296"},[1498,1500],"[dispatch]",[1054,1060],"[ifLoggedInThenRedirect, user]",[1222,1224],[1164,1170],[1332,1334],[646,648],"[dispatch, transcriptId]",[1872,1874],"[words]",[3343,3345],[615,617],"[dispatch, id]",[699,701],[722,724],[621,623],[2546,2546],", [keepWithTime, playing, clickedTime, currentTime, editorMode, setEditorMode]",[3483,3492],"[clickedTime, currentTime, dispatch, playing, podcast]",[463,470],"[props, value]"]
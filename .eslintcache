[{"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js":"1","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js":"2","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js":"3","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js":"4","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js":"5","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js":"6","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js":"7","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js":"8","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js":"9","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js":"10","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js":"11","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js":"12","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js":"13","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js":"14","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js":"15","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js":"16","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js":"17","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js":"18","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js":"19","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js":"20","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js":"21","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js":"22","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js":"23","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js":"24","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/TranscriptDisplay/TranscriptDisplay.js":"25","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayerWrapper.js":"26","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayer.js":"27","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Controls.js":"28","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/useAudioPlayer.js":"29","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Volume.js":"30","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Bar.js":"31","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Length.js":"32"},{"size":346,"mtime":1607545119820,"results":"33","hashOfConfig":"34"},{"size":2830,"mtime":1607724786270,"results":"35","hashOfConfig":"34"},{"size":127,"mtime":1607048726560,"results":"36","hashOfConfig":"34"},{"size":2976,"mtime":1607538212620,"results":"37","hashOfConfig":"34"},{"size":153,"mtime":1607049405560,"results":"38","hashOfConfig":"34"},{"size":156,"mtime":1607049772990,"results":"39","hashOfConfig":"34"},{"size":3757,"mtime":1607538684270,"results":"40","hashOfConfig":"34"},{"size":282,"mtime":1607722197336,"results":"41","hashOfConfig":"34"},{"size":892,"mtime":1607728188160,"results":"42","hashOfConfig":"34"},{"size":4170,"mtime":1607734924620,"results":"43","hashOfConfig":"34"},{"size":378,"mtime":1607446887890,"results":"44","hashOfConfig":"34"},{"size":1104,"mtime":1607452351210,"results":"45","hashOfConfig":"34"},{"size":772,"mtime":1607656674410,"results":"46","hashOfConfig":"34"},{"size":1521,"mtime":1607657690370,"results":"47","hashOfConfig":"34"},{"size":4848,"mtime":1607724120050,"results":"48","hashOfConfig":"34"},{"size":693,"mtime":1607724492990,"results":"49","hashOfConfig":"34"},{"size":2158,"mtime":1607724269210,"results":"50","hashOfConfig":"34"},{"size":46,"mtime":1607462916677,"results":"51","hashOfConfig":"34"},{"size":180,"mtime":1607532595660,"results":"52","hashOfConfig":"34"},{"size":182,"mtime":1607532579230,"results":"53","hashOfConfig":"34"},{"size":189,"mtime":1607532617240,"results":"54","hashOfConfig":"34"},{"size":1718,"mtime":1607656782210,"results":"55","hashOfConfig":"34"},{"size":1706,"mtime":1607656881900,"results":"56","hashOfConfig":"34"},{"size":428,"mtime":1607646956930,"results":"57","hashOfConfig":"34"},{"size":1356,"mtime":1607722961920,"results":"58","hashOfConfig":"34"},{"size":559,"mtime":1607730013010,"results":"59","hashOfConfig":"34"},{"size":760,"mtime":1607730031340,"results":"60","hashOfConfig":"34"},{"size":1081,"mtime":1607729311950,"results":"61","hashOfConfig":"34"},{"size":2432,"mtime":1607732520500,"results":"62","hashOfConfig":"34"},{"size":734,"mtime":1607727232300,"results":"63","hashOfConfig":"34"},{"size":1639,"mtime":1607729598050,"results":"64","hashOfConfig":"34"},{"size":600,"mtime":1607727235330,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"hnf33b",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js",[],["144","145"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js",["146"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./Homepage/Homepage\"\nimport Login from \"./Login/Login\"\nimport Signup from \"./Signup/Signup\"\nimport PodcasterHomepage from \"./Podcasters/Homepage/Homepage\"\nimport TranscriberHomepage from \"./Transcribers/Homepage/Homepage\"\nimport ResearcherHomepage from \"./Researcher/Homepage/Homepage\"\nimport EditorWrapper from \"./Editor/EditorWrapper\"\nimport PodcastDisplayWrapper from \"./Podcasters/PodcastDisplay/PodcastDisplayWrapper\"\nimport { useDispatch } from 'react-redux';\nimport PodcasterNav from \"./NavBar/PodcasterNav/NavBar\"\nimport TranscriberNav from \"./NavBar/TranscriberNav/NavBar\"\nimport DefaultNav from \"./NavBar/DefaultNav/NavBar\"\nimport { SET_USER } from './Store/actions';\nimport MyPodcasts from \"./Podcasters/MyPodcasts/MyPodcasts\"\nimport NewTranscriptForm from \"./Podcasters/NewTranscriptionForm/NewTranscriptForm\"\n\nfunction App() {\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    //const token = localStorage.getItem(\"token\")\n    const type = localStorage.getItem(\"type\")\n    if(type){\n      const loginUsingToken = async() =>{\n        const res = await fetch(`/${type.toLowerCase()}/token`)\n        const data = await res.json()\n        if(data.msg){\n          return\n        }\n        const action = {\n          type: SET_USER,\n          payload: {...data, type}\n        }\n        console.log(action)\n        dispatch(action)\n      }\n\n\n      loginUsingToken()\n    }\n  },[])\n  return (\n    <Router>\n      <Switch>\n        <Route exact={false} path=\"/podcaster\">\n          <PodcasterNav />\n        </Route>\n        <Route exact={false} path=\"/transcriber\">\n          <TranscriberNav />\n        </Route>\n        <Route path=\"/\" exact={false}>\n          <DefaultNav />\n        </Route>\n      </Switch>     \n      <Route exact={true} path=\"/\">\n        <Homepage />\n      </Route>\n      <Route exact={true} path=\"/login\">\n        <Login />\n      </Route>\n      <Route exact={true} path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact={true} path=\"/podcaster\">\n        <PodcasterHomepage />\n      </Route>\n      <Route exact={true} path=\"/podcaster/myPodcasts\">\n        <MyPodcasts />\n      </Route>\n      <Route exact={true} path=\"/podcaster/podcasts/:id\">\n        <PodcastDisplayWrapper />\n      </Route>\n      <Route exact={true} path=\"/podcaster/podcasts/:id/newtranscript\">\n        <NewTranscriptForm />\n      </Route>\n      <Route exact={true} path=\"/transcriber\">\n        <TranscriberHomepage />\n      </Route>\n      <Route exact={true} path=\"/researcher\">\n        <ResearcherHomepage />\n      </Route>\n      <Route exact={true} path=\"/transcriber/transcribe/:transcriptId\">\n        <EditorWrapper />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js",["147","148","149","150","151","152"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, setUser} from \"../Store/actions\"\n\nconst Login = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherLogin, setResearcherLogin] = useState(false)\n    const [transcriberLogin, setTranscriberLogin] = useState(false)\n    const [podcasterLogin, setPodcasterLogin] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherLogin(false)\n        setTranscriberLogin(false)\n        setPodcasterLogin(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterLogin(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberLogin(true)\n        } else{\n            setResearcherLogin(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n\n    const submitDetails = e =>{\n        const userDetails = setUser(option, email, password)\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Login</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Login","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js",["153","154","155"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, signupUser} from \"../Store/actions\"\n\nconst Signup = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherSignup, setResearcherSignup] = useState(false)\n    const [transcriberSignup, setTranscriberSignup] = useState(false)\n    const [podcasterSignup, setPodcasterSignup] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherSignup(false)\n        setTranscriberSignup(false)\n        setPodcasterSignup(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterSignup(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberSignup(true)\n        } else{\n            setResearcherSignup(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n    const handleFirstName = e => setFirstName(e.target.value)\n    const handleLastName = e => setLastName(e.target.value)\n\n    const submitDetails = e =>{\n        let userDetails\n        if(researcherSignup){\n            userDetails = signupUser(option, email, password)\n        } else {\n            userDetails = signupUser(option, email, password, firstName, lastName)\n        }\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Signup</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n                {podcasterSignup || transcriberSignup ? \n                <>\n                <label>First Name</label>\n                <input type=\"text\" value={firstName} onChange={handleFirstName}></input>\n                <label>Last Name</label>\n                <input type=\"text\" value={lastName} onChange={handleLastName}></input>\n                </> : null\n            }\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Signup","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js",["156"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Editor from \"./Editor\"\nimport {getEditorData, clearEditorData} from \"../Store/actions\"\nimport { useParams } from \"react-router\"\n\nconst EditorWrapper = (props) =>{\n    const dispatch = useDispatch()\n    const {transcriptId} = useParams()\n    const editorData = useSelector(state=>state.editorData)\n\n    const [stateEditorData, setStateEditorData] = useState(editorData)\n\n    useEffect(()=>{\n        const prom = getEditorData(transcriptId)\n        prom.then(val=>{dispatch(val)})\n        return()=>{dispatch(clearEditorData())}\n    },[])\n\n    useEffect(()=>{\n        setStateEditorData(editorData)\n    }, [editorData])\n\n    if(!stateEditorData.data){\n        return <p>Loading</p>\n    } \n    return(\n        <Editor data={stateEditorData} />\n    )\n}\n\n\nexport default EditorWrapper","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js",["157","158"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js",["159"],"import React from \"react\";\n\nconst SpeakerSection = (props) =>{\n    const speakerName = props.speaker\n    const stateUpdater = props.stateUpdater\n\n    const changeSpeakerName = (name) =>{\n        stateUpdater(speakerName, name)\n    }\n\n    return(\n        <div className=\"speakerSecontion\">\n            <h3>{speakerName}:</h3>\n        </div>\n    )\n}\n\nexport default SpeakerSection","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js",["160"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PodcastDisplay from \"./PodCastDisplay\"\nimport {getPodcast, clearPodcast} from \"../../Store/actions\"\nimport { useParams } from \"react-router\"\n\nconst PodcastDisplayWrapper = (props) =>{\n    const {id} = useParams()\n    const dispatch = useDispatch()\n    const podcastInfo = useSelector(state=>state.podcastDisplay)\n\n    useEffect(()=>{\n        console.log(\"calling the back\")\n        const asyncFunc = async() => await getPodcast(id)\n        asyncFunc().then(val=>dispatch(val))\n        return ()=>{\n            dispatch(clearPodcast())\n        }\n    }, [])\n\n    return(\n        \n        <PodcastDisplay info={podcastInfo} />\n    )\n}\n\nexport default PodcastDisplayWrapper","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js",["161"],"import { useDispatch } from \"react-redux\"\n\n\nexport const GET_PODCAST = \"GET_PODCAST\"\nexport const CLEAR_PODCAST = \"CLEAR_PODCAST\"\nexport const SET_USER = \"SET_USER\"\nexport const REMOVE_USER = \"REMOVE_USER\"\nexport const SET_ERROR = \"SET_ERROR\"\nexport const CLEAR_ERROR = \"CLEAR_ERROR\"\nexport const SET_MYPODCASTS = \"SET_MYPODCASTS\"\nexport const CLEAR_MYPODCASTS = \"CLEAR_MYPODCASTS\"\nexport const SET_MEDIAURL = \"SET_MEDIAURL\"\nexport const CLEAR_MEDIAURL = \"CLEAR_MEDIAURL\"\nexport const SET_TRANSCRIPTS = \"SET_TRANSCRIPTS\"\nexport const CLEAR_TRANSCRIPTS = \"CLEAR_TRANSCRIPTS\"\nexport const GET_EDITORDATA = \"GET_EDITORDATA\"\nexport const CLEAR_EDITORDATA = \"CLEAR_EDITORDATA\"\n\n\n\nexport const getPodcast = async (podcastId) =>{\n    const res = await fetch(\"/podcaster/podcasts/\" + podcastId)\n    const data = await res.json()\n    return{type: GET_PODCAST, payload: data}\n    \n}\n\nexport const clearPodcast = () =>{\n    return{\n        type: CLEAR_PODCAST\n    }\n}\n\nexport const setError = (err) =>{\n    return {\n        type: SET_ERROR,\n        payload: err\n    }\n}\n\nexport const clearError = () =>{\n    return{\n        type: CLEAR_ERROR\n    }\n}\n\nexport const setUser = async (type, email, password) =>{\n    const res = await fetch(`/${type.toLowerCase()}/login`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    const data = await res.json()\n    if(data.msg){\n        return setError(data.msg)\n    }\n    //localStorage.setItem(\"token\", data.token)\n    document.cookie = `loginToken=${data.token}`;\n    localStorage.setItem(\"type\", type)\n    console.log(data, data.token)\n    return {\n        type: SET_USER,\n        payload: {...data, type}\n    }\n}\n\nexport const signupUser = async (type, email, password, firstName, lastName) =>{\n    const res = await fetch(`/${type.toLowerCase()}/signup`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password, firstName, lastName})\n    })\n    const data = await res.json()\n    if(data.msg){\n        return setError(data.msg)\n    }\n    // localStorage.setItem(\"token\", data.token)\n    document.cookie = `loginToken=${data.token}`;\n    localStorage.setItem(\"type\", type)\n    return {\n        type: SET_USER,\n        payload: {...data, type}\n    }\n}\n\nexport const removeUser = () =>{\n    return {\n        type: REMOVE_USER,\n        payload: {}\n    }\n}\n\nexport const setMyPodcasts = async ()=>{\n    const res = await fetch(`/podcaster/podcasts/mypodcasts`)\n    const data = await res.json()\n    return {\n        type: SET_MYPODCASTS,\n        payload: data\n    }\n\n}\n\nexport const clearMyPodcasts = () =>{\n    return {\n        type: CLEAR_MYPODCASTS\n    }\n}\n\nexport const setNewPodcast = async (rssFeedUrl)=>{\n    const res = await fetch(\"/podcaster/podcasts/new\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({rssFeedUrl})\n    })\n    const data = await res.json()\n    return {\n        type: SET_MYPODCASTS,\n        payload: data\n    }\n}\n\nexport const setMediaUrl = (mediaurl) =>{\n    return{\n        type: SET_MEDIAURL,\n        payload: mediaurl\n    }\n}\n\nexport const clearMediaUrl = () =>{\n    return{\n        type: CLEAR_MEDIAURL\n    }\n}\n\nexport const createNewTranscriptJob = async (mediaLink, podcastId, speakerNames) =>{\n    const res = await fetch(`/podcaster/podcasts/${podcastId}/newJob`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            mediaUrl: mediaLink,\n            speakerNames\n        })\n    })\n    const data = await res.json();\n    if(!data.msg === \"starting\"){\n        return{\n            type: SET_ERROR,\n            payload: \"There was a problem processing this transcription. Please try again later\"\n        }\n    }\n    // const res2 = await fetch(`/podcaster/podcast/${podcastId}`)\n    // const data2 = res2.json()\n    // return{type: GET_PODCAST, payload: data2}\n    return clearMediaUrl()\n    \n}\n\nexport const getTranscripts = async() =>{\n    const res = await fetch(\"/transcriber/openprojects\")\n    const data = await res.json()\n    return {\n        type: SET_TRANSCRIPTS,\n        payload: data\n    }\n}\n\nexport const clearTranscripts = () =>{\n    return{\n        type: CLEAR_TRANSCRIPTS\n    }\n}\n\nexport const getEditorData = async (id) =>{\n    const res = await fetch(\"/transcriber/transcription/\" + id)\n    const data = await res.json()\n    if(data.msg){\n        return{\n            type: SET_ERROR,\n            payload: data.msg\n        }\n    }\n    return {\n        type: GET_EDITORDATA,\n        payload: data}\n}\n\nexport const clearEditorData = () =>{\n    return{\n        type: CLEAR_EDITORDATA,\n    }\n}","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js",["162"],"import {createStore, applyMiddleware, combineReducers, compose} from \"redux\"\n\nimport {podcastDisplayReducer, errorReducer, userReducer, myPodcastsReducer, mediaUrlReducer, transcriptsReducer, editorReducer} from \"./reducers\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({podcastDisplay: podcastDisplayReducer, user: userReducer, error: errorReducer, myPodcasts: myPodcastsReducer, mediaUrl: mediaUrlReducer,\n    transcripts: transcriptsReducer, editorData: editorReducer})\n\nconst configureStore = initialState =>{\n    return createStore(reducer, initialState, composeEnhancers())\n}\n\nexport const store = configureStore({})\n","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js",[],["163","164"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/MyPodcasts/MyPodcasts.js",["165"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport {setMyPodcasts, clearMyPodcasts, setNewPodcast} from \"../../Store/actions\"\n\n\nconst MyPodcasts = (props) =>{\n    const history = useHistory()\n    const myPodcasts = useSelector(state=>state.myPodcasts)\n    const dispatch = useDispatch()\n\n    const [myPodcastsState, setMyPodcastsState] = useState(myPodcasts || [])\n    const [newRSSFeed, setNewRSSFeed] = useState(\"\")\n\n    useEffect(()=>{\n        const pods = setMyPodcasts()\n        pods.then(val=> dispatch(val))\n        return ()=>{\n            dispatch(clearMyPodcasts())\n        }\n    },[])\n\n    useEffect(()=>{\n        setMyPodcastsState(myPodcasts)\n    },[myPodcasts])\n\n    const handleRSSFeedChange = (e) => setNewRSSFeed(e.target.value)\n\n    const addFeed = e =>{\n        setNewRSSFeed(\"\")\n        const prom = setNewPodcast(newRSSFeed)\n        prom.then(val => dispatch(val))\n    }\n\n    const generateLinkFunction = (id) =>{\n        return () =>{\n            history.push(\"/podcaster/podcasts/\" + id)\n        }\n    }\n\n    return(\n        <>\n        <div className=\"myPodcasts\">\n            {myPodcastsState.map((el, i) =>{\n                return(\n                    <div onClick={generateLinkFunction(el.id)} className=\"podcast\" key={i}>\n                        <h3>{el.name}</h3>\n                    </div>\n                )\n            })}\n        </div>\n        <br/>\n        <br/>\n        <label>Add New RSS Feed:</label>\n        <input value={newRSSFeed} onChange={handleRSSFeedChange}></input>\n        <button onClick={addFeed}>Add Feed</button>\n\n\n        </>\n    )\n}\n\nexport default MyPodcasts","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/NewTranscriptForm.js",["166"],"import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SpeakerBox from \"./SpeakerBox\"\nimport {createNewTranscriptJob} from \"../../Store/actions\"\nimport { useHistory, useParams } from \"react-router\";\nimport {clearMediaUrl} from \"../../Store/actions\"\n\nconst NewTranscriptForm = (props) =>{\n    const {id} = useParams()\n    const dispatch = useDispatch()\n    const mediaUrl = useSelector(state=>state.mediaUrl)\n    const history = useHistory()\n    const [speakerSections, setSpeakerSections] = useState([\"item\"])\n    const [loading, setLoading] = useState(false)\n\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearMediaUrl())\n        }\n    },[])\n    \n    const addSpeaker = () =>{\n        const temp = [...speakerSections]\n        temp.push(\"item\")\n        setSpeakerSections(temp)\n    }\n\n    const submit = () =>{\n        setLoading(true)\n        const getAllBoxes = document.querySelectorAll(\".speakerInputBox\")\n        const speakers = []\n        getAllBoxes.forEach((el)=>{\n            speakers.push(el.value)\n        })\n        const prom = createNewTranscriptJob(mediaUrl, id, speakers)\n        prom.then(val=> {\n            dispatch(val);\n            history.goBack()\n        })\n    }\n\n\n\n    return(\n        <div className=\"speakerNameForm\">\n            {speakerSections.map((el, i)=>{\n                return(\n                    <SpeakerBox index={i} />\n                )\n            })}\n            <br/>\n            <button onClick={addSpeaker}>Add Speaker</button>\n            {loading ? <button>Pending</button> : <button onClick={submit}>Submit</button>}\n        </div>\n        \n    )\n}\n\nexport default NewTranscriptForm","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/NewTranscriptionForm/SpeakerBox.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/TranscriptDisplay/TranscriptDisplay.js",["167"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {getTranscripts, clearTranscripts} from \"../../../Store/actions\"\n\nconst TranscriptDisplay = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    const transcripts = useSelector(state=>state.transcripts)\n\n    const [stateTranscripts, setStateTranscripts] = useState(transcripts)\n\n    useEffect(()=>{\n        const prom = getTranscripts()\n        prom.then(val=>dispatch(val))\n\n        return ()=>dispatch(clearTranscripts())\n    },[])\n\n    useEffect(()=>{\n        setStateTranscripts(transcripts)\n    }, [transcripts])\n\n    const createClickFunction = (id) => {\n        return ()=>{\n            history.push(\"/transcriber/transcribe/\" + id)\n        }\n    }\n\n    if(!stateTranscripts.length){\n        return <p>Loading</p>\n    }else{\n        return(\n            <div className=\"TranscriptPage\">\n                {stateTranscripts.map((el, i)=>{\n                    return(<div className=\"neededTranscript\" key={i} onClick={createClickFunction(el.id)}>\n                        <h4>{el.title}</h4>\n                        <p>From: {el.podcastName}</p>\n                    </div>)\n                })}\n            </div>\n        )\n    }\n}\n\nexport default TranscriptDisplay","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayerWrapper.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/AudioPlayer.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Controls.js",["168","169","170","171"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/useAudioPlayer.js",["172","173"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Volume.js",["174"],"import React, { useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nconst Volume = (props) =>{\n    const [value, setValue] = React.useState(50);\n    \n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    useEffect(()=>{\n        props.makeSetAudioVolume(document.getElementById(\"audio\"))(value)\n    },[value])\n    \n    return (\n        <div className=\"AudioPlayer__VolumeDiv\">\n            <VolumeDown />\n            <Slider value={value} onChange={handleChange} aria-labelledby=\"Volume slider\" />\n            <VolumeUp />\n        </div>\n        )\n}\n\nexport default Volume;","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Bar.js",["175"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/AudioPlayer/Length.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":42,"column":5,"nodeType":"182","endLine":42,"endColumn":7,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":14,"column":12,"nodeType":"186","messageId":"187","endLine":14,"endColumn":27},{"ruleId":"184","severity":1,"message":"188","line":15,"column":12,"nodeType":"186","messageId":"187","endLine":15,"endColumn":28},{"ruleId":"184","severity":1,"message":"189","line":16,"column":12,"nodeType":"186","messageId":"187","endLine":16,"endColumn":26},{"ruleId":"184","severity":1,"message":"190","line":20,"column":12,"nodeType":"186","messageId":"187","endLine":20,"endColumn":22},{"ruleId":"180","severity":1,"message":"191","line":31,"column":8,"nodeType":"182","endLine":31,"endColumn":14,"suggestions":"192"},{"ruleId":"180","severity":1,"message":"181","line":41,"column":8,"nodeType":"182","endLine":41,"endColumn":10,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"190","line":22,"column":12,"nodeType":"186","messageId":"187","endLine":22,"endColumn":22},{"ruleId":"180","severity":1,"message":"191","line":33,"column":8,"nodeType":"182","endLine":33,"endColumn":14,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"181","line":43,"column":8,"nodeType":"182","endLine":43,"endColumn":10,"suggestions":"195"},{"ruleId":"180","severity":1,"message":"196","line":18,"column":7,"nodeType":"182","endLine":18,"endColumn":9,"suggestions":"197"},{"ruleId":"184","severity":1,"message":"198","line":42,"column":13,"nodeType":"186","messageId":"187","endLine":42,"endColumn":25},{"ruleId":"180","severity":1,"message":"199","line":46,"column":8,"nodeType":"182","endLine":46,"endColumn":10,"suggestions":"200"},{"ruleId":"184","severity":1,"message":"201","line":7,"column":11,"nodeType":"186","messageId":"187","endLine":7,"endColumn":28},{"ruleId":"180","severity":1,"message":"202","line":19,"column":8,"nodeType":"182","endLine":19,"endColumn":10,"suggestions":"203"},{"ruleId":"184","severity":1,"message":"204","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":21},{"ruleId":"184","severity":1,"message":"205","line":1,"column":22,"nodeType":"186","messageId":"187","endLine":1,"endColumn":37},{"ruleId":"176","replacedBy":"206"},{"ruleId":"178","replacedBy":"207"},{"ruleId":"180","severity":1,"message":"181","line":21,"column":7,"nodeType":"182","endLine":21,"endColumn":9,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"181","line":21,"column":7,"nodeType":"182","endLine":21,"endColumn":9,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"181","line":19,"column":7,"nodeType":"182","endLine":19,"endColumn":9,"suggestions":"210"},{"ruleId":"184","severity":1,"message":"204","line":8,"column":9,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"211","line":8,"column":22,"nodeType":"186","messageId":"187","endLine":8,"endColumn":33},{"ruleId":"184","severity":1,"message":"212","line":17,"column":11,"nodeType":"186","messageId":"187","endLine":17,"endColumn":29},{"ruleId":"184","severity":1,"message":"213","line":21,"column":11,"nodeType":"186","messageId":"187","endLine":21,"endColumn":33},{"ruleId":"180","severity":1,"message":"214","line":16,"column":5,"nodeType":"186","endLine":16,"endColumn":14,"suggestions":"215"},{"ruleId":"180","severity":1,"message":"216","line":83,"column":8,"nodeType":"182","endLine":83,"endColumn":17,"suggestions":"217"},{"ruleId":"180","severity":1,"message":"218","line":14,"column":7,"nodeType":"182","endLine":14,"endColumn":14,"suggestions":"219"},{"ruleId":"184","severity":1,"message":"220","line":3,"column":22,"nodeType":"186","messageId":"187","endLine":3,"endColumn":32},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["223"],"no-unused-vars","'researcherLogin' is assigned a value but never used.","Identifier","unusedVar","'transcriberLogin' is assigned a value but never used.","'podcasterLogin' is assigned a value but never used.","'stateError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ifLoggedInThenRedirect'. Either include it or remove the dependency array.",["224"],["225"],["226"],["227"],"React Hook useEffect has missing dependencies: 'dispatch' and 'transcriptId'. Either include them or remove the dependency array.",["228"],"'speakerNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["229"],"'changeSpeakerName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["230"],"'useDispatch' is defined but never used.","'applyMiddleware' is defined but never used.",["221"],["222"],["231"],["232"],["233"],"'useSelector' is defined but never used.","'handleGoToNextSong' is assigned a value but never used.","'handleGoToPreviousSong' is assigned a value but never used.","React Hook useEffect contains a call to 'setClickedTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [playing, clickedTime, currentTime] as a second argument to the useEffect Hook.",["234"],"React Hook useEffect has missing dependencies: 'clickedTime', 'currentTime', and 'playing'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["236"],"'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"239","fix":"242"},{"desc":"237","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"237","fix":"250"},{"desc":"237","fix":"251"},{"desc":"237","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [dispatch]",{"range":"259","text":"260"},"Update the dependencies array to be: [ifLoggedInThenRedirect, user]",{"range":"261","text":"262"},{"range":"263","text":"260"},{"range":"264","text":"262"},{"range":"265","text":"260"},"Update the dependencies array to be: [dispatch, transcriptId]",{"range":"266","text":"267"},"Update the dependencies array to be: [props.data]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, id]",{"range":"270","text":"271"},{"range":"272","text":"260"},{"range":"273","text":"260"},{"range":"274","text":"260"},"Add dependencies array: [playing, clickedTime, currentTime]",{"range":"275","text":"276"},"Update the dependencies array to be: [clickedTime, currentTime, playing, podcast]",{"range":"277","text":"278"},"Update the dependencies array to be: [props, value]",{"range":"279","text":"280"},[1526,1528],"[dispatch]",[1054,1060],"[ifLoggedInThenRedirect, user]",[1222,1224],[1164,1170],[1332,1334],[646,648],"[dispatch, transcriptId]",[1552,1554],"[props.data]",[655,657],"[dispatch, id]",[699,701],[715,717],[621,623],[1349,1349],", [playing, clickedTime, currentTime]",[2241,2250],"[clickedTime, currentTime, playing, podcast]",[463,470],"[props, value]"]
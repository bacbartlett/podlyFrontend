[{"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js":"1","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js":"2","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js":"3","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js":"4","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js":"5","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js":"6","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js":"7","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js":"8","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js":"9","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js":"10","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js":"11","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js":"12","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js":"13","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js":"14","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js":"15","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js":"16","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js":"17","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js":"18","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js":"19","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js":"20","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js":"21"},{"size":346,"mtime":1607545119820,"results":"22","hashOfConfig":"23"},{"size":2702,"mtime":1607546417550,"results":"24","hashOfConfig":"23"},{"size":127,"mtime":1607048726560,"results":"25","hashOfConfig":"23"},{"size":2976,"mtime":1607538212620,"results":"26","hashOfConfig":"23"},{"size":153,"mtime":1607049405560,"results":"27","hashOfConfig":"23"},{"size":156,"mtime":1607049772990,"results":"28","hashOfConfig":"23"},{"size":3757,"mtime":1607538684270,"results":"29","hashOfConfig":"23"},{"size":159,"mtime":1607049761510,"results":"30","hashOfConfig":"23"},{"size":19218,"mtime":1607445003290,"results":"31","hashOfConfig":"23"},{"size":4001,"mtime":1607452190360,"results":"32","hashOfConfig":"23"},{"size":378,"mtime":1607446887890,"results":"33","hashOfConfig":"23"},{"size":1104,"mtime":1607452351210,"results":"34","hashOfConfig":"23"},{"size":619,"mtime":1607487067860,"results":"35","hashOfConfig":"23"},{"size":157,"mtime":1607486092680,"results":"36","hashOfConfig":"23"},{"size":1956,"mtime":1607546578820,"results":"37","hashOfConfig":"23"},{"size":500,"mtime":1607536361440,"results":"38","hashOfConfig":"23"},{"size":827,"mtime":1607536305220,"results":"39","hashOfConfig":"23"},{"size":46,"mtime":1607462916677,"results":"40","hashOfConfig":"23"},{"size":180,"mtime":1607532595660,"results":"41","hashOfConfig":"23"},{"size":182,"mtime":1607532579230,"results":"42","hashOfConfig":"23"},{"size":189,"mtime":1607532617240,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hnf33b",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/index.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/App.js",["93","94","95"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Homepage/Homepage.js",[],["96","97"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Login/Login.js",["98","99","100","101","102","103"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, setUser} from \"../Store/actions\"\n\nconst Login = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherLogin, setResearcherLogin] = useState(false)\n    const [transcriberLogin, setTranscriberLogin] = useState(false)\n    const [podcasterLogin, setPodcasterLogin] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherLogin(false)\n        setTranscriberLogin(false)\n        setPodcasterLogin(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterLogin(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberLogin(true)\n        } else{\n            setResearcherLogin(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n\n    const submitDetails = e =>{\n        const userDetails = setUser(option, email, password)\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Login</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Login","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Researcher/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Signup/Signup.js",["104","105","106"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router\"\nimport {clearError, signupUser} from \"../Store/actions\"\n\nconst Signup = (props) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const error = useSelector(state=>state.error)\n    const user = useSelector(state=>state.user)\n\n    const [option, setOption] = useState(\"Podcaster\")\n    const [researcherSignup, setResearcherSignup] = useState(false)\n    const [transcriberSignup, setTranscriberSignup] = useState(false)\n    const [podcasterSignup, setPodcasterSignup] = useState(true)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    //const [userState, setUserState] = useState(user)\n    const [stateError, setStateError] = useState(error)\n    \n\n    const ifLoggedInThenRedirect = () =>{\n        if(user.type){\n            history.push(`/${user.type.toLowerCase()}`)\n        }\n    }\n\n    useEffect(()=>{\n        ifLoggedInThenRedirect()\n    }, [user])\n\n    useEffect(()=>{\n        setStateError(error)\n    }, [error])\n\n    useEffect(()=>{\n        return ()=>{\n            dispatch(clearError())\n        }\n    }, [])\n\n    const setAllToFalse = () =>{\n        setResearcherSignup(false)\n        setTranscriberSignup(false)\n        setPodcasterSignup(false)\n    }\n\n    const handleChange = (e) =>{\n        setAllToFalse()\n        const selection = e.target.value\n        if(selection === \"Podcaster\"){\n            setOption(\"Podcaster\")\n            setPodcasterSignup(true)\n        } else if(selection === \"Transcriber\"){\n            setOption(\"Transcriber\")\n            setTranscriberSignup(true)\n        } else{\n            setResearcherSignup(true)\n            setOption(\"Researcher\")\n        }\n    }\n\n    const handlePassword = e => setPassword(e.target.value)\n    const handleEmail = e => setEmail(e.target.value)\n    const handleFirstName = e => setFirstName(e.target.value)\n    const handleLastName = e => setLastName(e.target.value)\n\n    const submitDetails = e =>{\n        let userDetails\n        if(researcherSignup){\n            userDetails = signupUser(option, email, password)\n        } else {\n            userDetails = signupUser(option, email, password, firstName, lastName)\n        }\n        userDetails.then(val => dispatch(val))\n    }\n\n    return(\n        <div className=\"loginPage\">\n            <h1>Signup</h1>\n            <label>Login as:</label>\n            <select value={option} onChange={handleChange}>\n                <option value=\"Podcaster\">Podcaster</option>\n                <option value=\"Transcriber\">Transcriber</option>\n                <option value=\"Researcher\">Researcher</option>\n            </select>\n            <div className=\"error\">\n                {error}\n            </div>\n            <div className=\"loginForm\">\n                <label>Email</label>\n                <input type=\"email\" value={email} onChange={handleEmail}></input>\n                <label>Password</label>\n                <input type=\"password\" value={password} onChange={handlePassword}></input>\n                {podcasterSignup || transcriberSignup ? \n                <>\n                <label>First Name</label>\n                <input type=\"text\" value={firstName} onChange={handleFirstName}></input>\n                <label>Last Name</label>\n                <input type=\"text\" value={lastName} onChange={handleLastName}></input>\n                </> : null\n            }\n            </div>\n            <button className=\"submitButton\" onClick={submitDetails}>Login</button>\n        </div>\n        \n    )\n}\n\nexport default Signup","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Transcribers/Homepage/Homepage.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/EditorWrapper.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Editor.js",["107","108"],"import React, { useEffect, useState } from \"react\"\nimport SpeakerSection from \"./SpeakerSection/SpeakerSection\"\nimport Text from \"./Text/Text\"\n\n\nconst parseJsonAndSetStates = (wordArr) =>{\n    let speakerList = [wordArr[0].speaker]\n    let currentSpeaker = wordArr[0].speaker\n    let result = []\n    let collector = []\n    for(let i = 0; i < wordArr.length; i++){\n        if(wordArr[i].speaker !== currentSpeaker){\n            currentSpeaker = wordArr[i].speaker;\n            result.push(collector)\n            collector = []\n            if(!speakerList.includes(wordArr[i].speaker)){\n                speakerList.push(wordArr[i].speaker)\n            }\n        }\n        collector.push(wordArr[i])\n    }\n    result.push(collector)\n    console.log(result)\n    return {speakerNames: speakerList, sections: result}\n}\n\nconst Editor = (props) =>{\n    const [editorMode, setEditorMode] = useState(0)\n    const [stateSections, setStateSections] = useState([])\n    const [wordNodes, setWordNodes] = useState([])\n    const [selectedWordIndex, setSelectedWordIndex] = useState(0)\n\n    //const [speakers, setSpeakers] = useState(speakerNames)\n\n    useEffect(()=>{\n        let data = JSON.parse(props.data)\n        console.log(\"I am setting data again\")\n        data = [...data, ...data, ...data, ...data]\n        const temp = parseJsonAndSetStates(data)\n        let speakerNames = temp.speakerNames\n        let sections = temp.sections\n        //setSpeakers(speakerNames)\n        setStateSections(sections)\n    }, [])\n    \n    useEffect(()=>{\n        console.log(\"Resetting this jabroni\")\n        if(!stateSections){\n            return\n        }\n        let result = []\n        let currentIndex = 0\n        const words = document.querySelectorAll(\".Editor__Word\")\n        words.forEach(el=>{\n            //el.createAttribute(\"totalwordindex\")\n            el.setAttribute(\"totalwordindex\", currentIndex++)\n            result.push(el)\n        })\n        setWordNodes(result)\n\n    }, [stateSections])\n\n\n    //functions to thread\n\n\n    const setSpeakerNames = (oldName, newName) =>{\n        //this needs to alter the larger guy up in wrapper!!\n        //const innerSpeakers = [...speakers];\n        //const i = innerSpeakers.indexOf(oldName)\n        //innerSpeakers[i] = newName\n        //console.log(innerSpeakers)\n        //setSpeakers(innerSpeakers)\n        const newStateSections = []\n        for(let i = 0; i < stateSections.length; i++){\n            if(stateSections[i][0].speaker !== oldName){\n                newStateSections.push(stateSections[i])\n                continue\n            }\n            const collector = []\n            for(let j = 0; j < stateSections[i].length; j++){\n                const word = stateSections[i][j]\n                word.speaker = newName\n                collector.push(word)\n            }\n            newStateSections.push(collector)\n        }\n        setStateSections(newStateSections)\n    }\n\n    const handleWordClick = (e) =>{\n        if(editorMode === 2){\n            return\n        }\n        const newIndex = e.target.getAttribute(\"totalwordindex\")\n        if(selectedWordIndex === newIndex){\n            setEditorMode(2)\n            return\n        }\n        wordNodes[selectedWordIndex].classList.remove(\"Editor__SelectedWord\")\n        setSelectedWordIndex(newIndex)\n        wordNodes[newIndex].classList.add(\"Editor__SelectedWord\")\n    }\n    \n\n    if(!stateSections){\n        console.log(\"Nothing here\")\n        return null\n    }\n    console.log(\"SOMETHING HERE\")\n    return(\n        <div>\n        <h1>Editor</h1>\n        {stateSections.map((words, i) => {\n            return(\n                <div className=\"section\">\n                <SpeakerSection key={i*2} speaker={words[0].speaker} stateUpdater={setSpeakerNames} />\n                <Text setEditorMode={setEditorMode} editorMode={editorMode} handleWordClick={handleWordClick} text={words} specialKey={i} key={i*2+1} />\n                </div>\n            )\n        })}\n        </div>\n    )\n}\n\nexport default Editor","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/SpeakerSection/SpeakerSection.js",["109"],"import React from \"react\";\n\nconst SpeakerSection = (props) =>{\n    const speakerName = props.speaker\n    const stateUpdater = props.stateUpdater\n\n    const changeSpeakerName = (name) =>{\n        stateUpdater(speakerName, name)\n    }\n\n    return(\n        <div className=\"speakerSecontion\">\n            <h3>{speakerName}:</h3>\n        </div>\n    )\n}\n\nexport default SpeakerSection","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Editor/Text/Text.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodcastDisplayWrapper.js",["110"],"import React, { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PodcastDisplay from \"./PodCastDisplay\"\nimport {getPodcast} from \"../../Store/actions\"\n\nconst PodcastDisplayWrapper = (props) =>{\n    const dispatch = useDispatch()\n    const podcastInfo = useSelector(state=>state.podcastDisplay)\n\n    useEffect(()=>{\n        console.log(\"calling the back\")\n        const asyncFunc = async() => await getPodcast(1)\n        asyncFunc().then(val=>dispatch(val))\n    }, [])\n\n    return(\n        \n        <PodcastDisplay info={podcastInfo} />\n    )\n}\n\nexport default PodcastDisplayWrapper","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Podcasters/PodcastDisplay/PodCastDisplay.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/actions.js",["111"],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/store.js",["112"],"import {createStore, applyMiddleware, combineReducers, compose} from \"redux\"\n\nimport {podcastDisplayReducer, errorReducer, userReducer} from \"./reducers\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({podcastDisplay: podcastDisplayReducer, user: userReducer, error: errorReducer})\n\nconst configureStore = initialState =>{\n    return createStore(reducer, initialState, composeEnhancers())\n}\n\nexport const store = configureStore({})\n","/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Store/reducers.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/Globals.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/PodcasterNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/TranscriberNav/NavBar.js",[],"/home/bbartlett/AppAcademy/finalProject/frontendpodly/src/NavBar/DefaultNav/NavBar.js",[],{"ruleId":"113","severity":1,"message":"114","line":11,"column":9,"nodeType":"115","messageId":"116","endLine":11,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":12,"column":10,"nodeType":"115","messageId":"116","endLine":12,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":48,"column":5,"nodeType":"120","endLine":48,"endColumn":7,"suggestions":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"113","severity":1,"message":"126","line":14,"column":12,"nodeType":"115","messageId":"116","endLine":14,"endColumn":27},{"ruleId":"113","severity":1,"message":"127","line":15,"column":12,"nodeType":"115","messageId":"116","endLine":15,"endColumn":28},{"ruleId":"113","severity":1,"message":"128","line":16,"column":12,"nodeType":"115","messageId":"116","endLine":16,"endColumn":26},{"ruleId":"113","severity":1,"message":"129","line":20,"column":12,"nodeType":"115","messageId":"116","endLine":20,"endColumn":22},{"ruleId":"118","severity":1,"message":"130","line":31,"column":8,"nodeType":"120","endLine":31,"endColumn":14,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"119","line":41,"column":8,"nodeType":"120","endLine":41,"endColumn":10,"suggestions":"132"},{"ruleId":"113","severity":1,"message":"129","line":22,"column":12,"nodeType":"115","messageId":"116","endLine":22,"endColumn":22},{"ruleId":"118","severity":1,"message":"130","line":33,"column":8,"nodeType":"120","endLine":33,"endColumn":14,"suggestions":"133"},{"ruleId":"118","severity":1,"message":"119","line":43,"column":8,"nodeType":"120","endLine":43,"endColumn":10,"suggestions":"134"},{"ruleId":"113","severity":1,"message":"135","line":40,"column":13,"nodeType":"115","messageId":"116","endLine":40,"endColumn":25},{"ruleId":"118","severity":1,"message":"136","line":44,"column":8,"nodeType":"120","endLine":44,"endColumn":10,"suggestions":"137"},{"ruleId":"113","severity":1,"message":"138","line":7,"column":11,"nodeType":"115","messageId":"116","endLine":7,"endColumn":28},{"ruleId":"118","severity":1,"message":"119","line":14,"column":8,"nodeType":"120","endLine":14,"endColumn":10,"suggestions":"139"},{"ruleId":"113","severity":1,"message":"140","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":21},{"ruleId":"113","severity":1,"message":"141","line":1,"column":22,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'researcherLogin' is assigned a value but never used.","'transcriberLogin' is assigned a value but never used.","'podcasterLogin' is assigned a value but never used.","'stateError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ifLoggedInThenRedirect'. Either include it or remove the dependency array.",["145"],["146"],["147"],["148"],"'speakerNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["149"],"'changeSpeakerName' is assigned a value but never used.",["150"],"'useDispatch' is defined but never used.","'applyMiddleware' is defined but never used.",{"desc":"151","fix":"152"},"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"151","fix":"155"},{"desc":"153","fix":"156"},{"desc":"151","fix":"157"},{"desc":"158","fix":"159"},{"desc":"151","fix":"160"},"Update the dependencies array to be: [dispatch]",{"range":"161","text":"162"},"Update the dependencies array to be: [ifLoggedInThenRedirect, user]",{"range":"163","text":"164"},{"range":"165","text":"162"},{"range":"166","text":"164"},{"range":"167","text":"162"},"Update the dependencies array to be: [props.data]",{"range":"168","text":"169"},{"range":"170","text":"162"},[1642,1644],"[dispatch]",[1054,1060],"[ifLoggedInThenRedirect, user]",[1222,1224],[1164,1170],[1332,1334],[1502,1504],"[props.data]",[502,504]]